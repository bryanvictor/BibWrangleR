full.df <- data.frame(cbind(attributes, record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
View(full.df)
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
full.df$articleID <- cumsum(grepl("________", full.df$record)
full.df$articleID <- cumsum(grepl("________", full.df$record))
View(full.df)
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
View(full.df)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
View(full.df)
dd<-filter(full.df, articleID==3290)
View(dd)
ss<-filter(full.df, articleID==72)
View(ss)
DF$attributes <- ifelse(DF$attributes == "Title", "Article", DF$attributes)
full.df$attributes <- ifelse(full.df$attributes == "Title", "Article", full.df$attributes)
View(full.df)
attributeKeep <- c("Article", "Author", "Publicationtitle",
"Publicationyear", "Abstract", "keyWord", "Location", "Pages")
attributeKeepIndex <- DF$attributes %in% attributeKeep
full.df <- full.df[attributeKeepIndex,]
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
indx <- which(grepl('\\_{10}', record))
rm(list=ls())
path<-"C:/Users/SSW/Desktop/Wrangle"
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
full.df$articleID <- cumsum(grepl("________", full.df$record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
full.df$attributes <- ifelse(full.df$attributes == "Title", "Article", full.df$attributes)
attributeKeep <- c("Article", "Author", "Publicationtitle",
"Publicationyear", "Abstract", "keyWord", "Location", "Pages")
attributeKeepIndex <- full.df$attributes %in% attributeKeep
full.df <- full.df[attributeKeepIndex,]
View(full.df)
length(unique(full.df$articleID))
table(full.df$attributes)
ff<-filter(full.df, attributes=="Publicationtitle")
cc<-ff$articleID
View(cc)
getwd()
setwd("C:/Users/SSW/Desktop")
write.csv(cc, file="ID.csv")
ss<-filter(full.df, article==1380)
ss<-filter(full.df, articleID==1380)
View(ss)
DF <- full.df[full.df$articleID %in% cc, ]
table(DF$attributes)
ss<-filter(full.df, articleID==1566)
View(ss)
full.df$attributes <- ifelse(full.df$attributes == "Publicationdetails",
"Publicationtitle", full.df$attributes)
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
full.df$articleID <- cumsum(grepl("________", full.df$record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
full.df$attributes <- ifelse(full.df$attributes == "Title", "Article", full.df$attributes)
full.df$attributes <- ifelse(full.df$attributes == "Publicationdetails",
"Publicationtitle", full.df$attributes)
attributeKeep <- c("Article", "Author", "Publicationtitle",
"Publicationyear", "Abstract", "keyWord", "Location", "Pages")
attributeKeepIndex <- full.df$attributes %in% attributeKeep
full.df <- full.df[attributeKeepIndex,]
table(attributes(full.df$attributes))
table(full.df$attributes)
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
full.df$articleID <- cumsum(grepl("________", full.df$record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
ff<-filter(full.df, attributes=="Publicationdetails")
View(ff)
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
record <- lapply(temp, readLines)
record <- unlist(lapply(temp, readLines))
tail(record)
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
View(full.df)
full.df$articleID <- cumsum(grepl("________", full.df$record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
full.df$attributes <- ifelse(full.df$attributes == "Title", "Article", full.df$attributes)
View(full.df)
dd<-filter(full.df, attributes=="Publicationdetails")
View(dd)
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
full.df$articleID <- cumsum(grepl("________", full.df$record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(":", "", full.df$attributes)
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
full.df$attributes <- ifelse(full.df$attributes == "Title", "Article", full.df$attributes)
full.df$attributes <- ifelse(full.df$attributes == "Publicationdetails",
"Publicationtitle", full.df$attributes)
attributeKeep <- c("Article", "Author", "Publicationtitle",
"Publicationyear", "Abstract", "keyWord", "Location", "Pages")
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
indx <- which(grepl('\\_{10}', record))
record[indx+2] <- paste0('Article: ', record[indx+2])
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
full.df$articleID <- cumsum(grepl("________", full.df$record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
cc<-filter(full.df, attributes=="Publicationdetails")
View(cc)
DF.temp <- filter(full.df, attributes=="Publicationdetails")
View(DF.temp)
DF.temp$record <- sub("\\s(.*", "", DF.temp$record)
DF.temp$record <- sub("\s(.*", "", DF.temp$record)
DF.temp$record <- sub(" (.*", "", DF.temp$record)
DF.temp$record <- gsub(" (.*", "", DF.temp$record)
?gsub
DF.temp$record <- gsub("\\s\\(.*", "", DF.temp$record)
View(DF.temp)
View(DF.temp)
ss<-filter(full.df, articleID==6391)
View(ss)
ss<-filter(full.df, articleID==6390)
View(ss)
aa<-filter(full.df, attributes=="Documentauthor")
View(aa)
full.df$record <- ifelse(full.df$attributes=="Publicationdetails",
gsub("\\s\\(.*", "", full.df$record), full.df$record)
ff<-filter(full.df, attributes=="Publicationdetails")
View(ff)
ff<-filter(full.df, attributes=="Publicationtitle")
View(ff)
{DF.temp <- filter(full.df, attributes == "Publicationtitle")
{DF.temp <- filter(full.df, attributes == "Publicationtitle")
DF.temp <- filter(full.df, attributes == "Publicationtitle")
DF.temp <- filter(full.df, attributes == "Publicationtitle")
View(DF.temp)
DF.temp <- filter(full.df, attributes == "Article")
View(full.df)
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
# extract attributes as a separate variable
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
full.df$articleID <- cumsum(grepl("________", full.df$record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
full.df$record <- ifelse(full.df$attributes=="Publicationdetails",
gsub("\\s\\(.*", "", full.df$record), full.df$record)
full.df$attributes <- ifelse(full.df$attributes == "Title",
"Article", full.df$attributes)
full.df$attributes <- ifelse(full.df$attributes== "Documentauthor",
"Author", full.df$attributes)
full.df$attributes <- ifelse(full.df$attributes == "Publicationdetails",
"Publicationtitle", full.df$attributes)
attributeKeep <- c("Article", "Author", "Publicationtitle",
"Publicationyear", "Abstract", "keyWord", "Location", "Pages")
attributeKeepIndex <- full.df$attributes %in% attributeKeep
full.df <- full.df[attributeKeepIndex,]
DF.temp <- filter(full.df, attributes == "Article")
View(DF.temp)
DF.temp$record <- tolower(DF.temp$record)
View(DF.temp)
DF.temp <- DF.temp[duplicated(DF.temp$record), ]
View(DF.temp)
DF.duplicated.ID <- DF.temp$articleID
full.df <- full.df[!(full.df$articleID %in% DF.duplicated.ID), ]
rm(DF.temp, DF.duplicated.ID)
rm(list=ls())
library(BibWrangleR)
proQuestBWR.f(path="C:/Users/SSW/Desktop/Wrangle")
pkgs <- c("dplyr", "stringi", "stringr")
pkgs_miss <- pkgs[which(!pkgs %in% installed.packages()[, 1])]
if (length(pkgs_miss) > 0) {
message("\n ...Installing missing packages!\n")
install.packages(pkgs_miss)
}
if (length(pkgs_miss) == 0) {
message("\n ...Packages were already installed!\n")
}
library(dplyr)
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
path <- "C:/Users/SSW/Desktop/Wrangle"
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
# extract attributes as a separate variable
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
full.df$articleID <- cumsum(grepl("________", full.df$record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
full.df$record <- ifelse(full.df$attributes=="Publicationdetails",
gsub("\\s\\(.*", "", full.df$record), full.df$record)
full.df$attributes <- ifelse(full.df$attributes == "Title",
"Article", full.df$attributes)
full.df$attributes <- ifelse(full.df$attributes== "Documentauthor",
"Author", full.df$attributes)
full.df$attributes <- ifelse(full.df$attributes == "Publicationdetails",
"Publicationtitle", full.df$attributes)
attributeKeep <- c("Article", "Author", "Publicationtitle",
"Publicationyear", "Abstract", "keyWord", "Location", "Pages")
attributeKeepIndex <- full.df$attributes %in% attributeKeep
full.df <- full.df[attributeKeepIndex,]
#_______________________________________________________________________________
#                    3.  REMOVE DUPLICATE RECORDS
#-------------------------------------------------------------------------------
# In this section, the code is doing a global match for duplicate article records
# based on the title. Duplicates occur because multiple databases have overlapping indexing.
#_______________________________________________________________________________
if(rmDuplicates==TRUE)
#Select out all titles
{DF.temp <- filter(full.df, attributes == "Article")
#Journal titles show discrepancies in capitalization rules.  Force all to
#lower to address this problem.  Further testing should consider stripping
#white space.
DF.temp$record <- tolower(DF.temp$record)
#Find duplicated records - duplicates are marked as true
DF.temp <- DF.temp[duplicated(DF.temp$record), ]
#Screen out duplicated records by articleID. The articleID must be used
#because the duplicate title contains other article attributes
DF.duplicated.ID <- DF.temp$articleID
full.df <- full.df[!(full.df$articleID %in% DF.duplicated.ID), ]
rm(DF.temp, DF.duplicated.ID)
}
#_______________________________________________________________________________
#            AUTHOR FIELD FIX - AUTHORS IN SINGLE FIELD
#-------------------------------------------------------------------------------
#
# Social Work abstracts lists authors in a single cell, separated by a semi-
# colon, and then includes digits and email addresses in some occassions.
# The following text locates each author in the cell and places it into a new
# row to be consistent with PsychInfo and SSA.
#_______________________________________________________________________________
#Create a new temporary data frame
DF.temp <- filter(full.df, attributes == "Author")
#Identify records with semi-colons in author names
semi.colons <- grepl("(;)", DF.temp$record)
#Select out those records with semi-colons in author names from temporary
#data frame
DF.temp <- DF.temp[semi.colons, ]
#Add a semi colon to the end of every string
DF.temp$record <- paste(DF.temp$record, ";", sep="")
semi.colon.split <- strsplit(DF.temp$record, ";")
split.df <- data.frame(
attributes = rep(DF.temp$attributes, lapply(semi.colon.split, length)),
record = unlist(semi.colon.split),
articleID = rep(DF.temp$articleID, lapply(semi.colon.split, length)))
#Trim whitespace on both sides
split.df$record <- stringr::str_trim(split.df$record, side = "both")
#Eliminate author affiliation from author record
split.df$record <- gsub("1\\s.+", "", split.df$record)
#Eliminate remaining number from author record
split.df$record <- gsub("1", "", split.df$record)
# Create a vector of all articleID's that were fixed
fixed.ID <- unique(split.df$articleID)
#Filter out all processed records from the fixed list
DF.authors <- filter(full.df, attributes == "Author")
DF.authors.good <- DF.authors[!(DF.authors$articleID %in% fixed.ID),]
DF.authors.fixed <- split.df
DF.no.authors <- filter(full.df, attributes != "Author")
#Strip author biographies
DF.authors.good$record <- gsub("11\\s.+", "", DF.authors.good$record)
#Bind the reduced DF with the fixed df
DF <- rbind(DF.no.authors, DF.authors.good, DF.authors.fixed)
DF <- arrange(DF, articleID)
#_______________________________________________________________________________
#            KEYWORD FIELD FIX - KEYWORDS IN SINGLE FIELD
#-------------------------------------------------------------------------------
#
# Social Work abstracts lists authors in a single cell, separated by a semi-
# colon, and then includes digits and email addresses in some occassions.
# The following text locates each author in the cell and places it into a new
# row to be consistent with PsychInfo and SSA.
#_______________________________________________________________________________
#Create a new temporary data frame
full.df$attributes <- ifelse(full.df$attributes == "Subject",
"keyWord", full.df$attributes)
DF.temp <- filter(full.df, attributes == "keyWord")
#Add a comma to the end of every string
DF.temp$record <- paste(DF.temp$record, ";", sep="")
comma.split <- strsplit(DF.temp$record, ";")
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
# extract attributes as a separate variable
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
View(full.df)
library(BibWrangleR)
proQuestBWR.f(path="C:/Users/SSW/Desktop/Wrangle")
View(proQuestBWR.df)
dd<-filter(proQuestBWR.df, attributes=="author")
View(dd)
full.df <- proQuestBWR.df
DF.temp <- filter(full.df, attributes == "Author")
DF.temp <- filter(full.df, attributes == "author")
semi.colons <- grepl("(;)", DF.temp$record)
table(semi.colons)
DF.temp <- DF.temp[semi.colons, ]
DF.temp$record <- paste(DF.temp$record, ";", sep="")
View(DF.temp)
semi.colon.split <- strsplit(DF.temp$record, ";")
View(semi.colon.split)
split.df <- data.frame(
attributes = rep(DF.temp$attributes, lapply(semi.colon.split, length)),
record = unlist(semi.colon.split),
articleID = rep(DF.temp$articleID, lapply(semi.colon.split, length)))
View(split.df)
split.df$record <- stringr::str_trim(split.df$record, side = "both")
split.df$record <- gsub("1\\s.+", "", split.df$record)
split.df$record <- gsub("1", "", split.df$record)
fixed.ID <- unique(split.df$articleID)
DF.authors <- filter(full.df, attributes == "Author")
DF.authors <- filter(full.df, attributes == "author")
DF.authors.good <- DF.authors[!(DF.authors$articleID %in% fixed.ID),]
View(DF.authors.good)
DF.authors.fixed <- split.df
DF.no.authors <- filter(full.df, attributes != "Author")
DF.no.authors <- filter(full.df, attributes != "author")
DF.authors.good$record <- gsub("11\\s.+", "", DF.authors.good$record)
DF <- rbind(DF.no.authors, DF.authors.good, DF.authors.fixed)
DF <- arrange(DF, articleID)
View(DF)
library(BibWrangleR)
proQuestBWR.f(path="C:/Users/SSW/Desktop/Wrangle")
View(proQuestBWR.df)
cc<-filter(ProQuestBWR.df, attributes=="keyWord")
library(dplyr)
cc<-filter(proQuestBWR.df, attributes=="keyWord")
library(dplyr)
temp <- list.files(path, pattern = ".txt", full.names=TRUE)
record <- unlist(lapply(temp, readLines))
# extract attributes as a separate variable
attributes <- stringr::str_extract(record, "(.*?):")
full.df <- data.frame(cbind(attributes, record))
full.df$articleID <- cumsum(grepl("________", full.df$record))
full.df <- tbl_df(full.df) #Convert to dplyr table for easier reading
full.df <- filter(full.df, record != "") #Eliminate empy rows
full.df <- filter(full.df, record = !(is.na(attributes))) #Eliminate missing
full.df$attributes <- gsub(" ", "", full.df$attributes)
full.df$attributes <- gsub(":", "", full.df$attributes)
full.df$record <- gsub("^[^:]+:", "", full.df$record)
full.df$record <- ifelse(full.df$attributes=="Publicationdetails",
gsub("\\s\\(.*", "", full.df$record), full.df$record)
full.df$attributes <- ifelse(full.df$attributes == "Title",
"Article", full.df$attributes)
full.df$attributes <- ifelse(full.df$attributes== "Documentauthor",
"Author", full.df$attributes)
full.df$attributes <- ifelse(full.df$attributes == "Publicationdetails",
"Publicationtitle", full.df$attributes)
full.df$attributes <- ifelse(full.df$attributes == "Subject",
"keyWord", full.df$attributes)
attributeKeep <- c("Article", "Author", "Publicationtitle",
"Publicationyear", "Abstract", "keyWord", "Location", "Pages")
attributeKeepIndex <- full.df$attributes %in% attributeKeep
full.df <- full.df[attributeKeepIndex,]
#_______________________________________________________________________________
#                    3.  REMOVE DUPLICATE RECORDS
#-------------------------------------------------------------------------------
# In this section, the code is doing a global match for duplicate article records
# based on the title. Duplicates occur because multiple databases have overlapping indexing.
#_______________________________________________________________________________
if(rmDuplicates==TRUE)
#Select out all titles
{DF.temp <- filter(full.df, attributes == "Article")
#Journal titles show discrepancies in capitalization rules.  Force all to
#lower to address this problem.  Further testing should consider stripping
#white space.
DF.temp$record <- tolower(DF.temp$record)
#Find duplicated records - duplicates are marked as true
DF.temp <- DF.temp[duplicated(DF.temp$record), ]
#Screen out duplicated records by articleID. The articleID must be used
#because the duplicate title contains other article attributes
DF.duplicated.ID <- DF.temp$articleID
full.df <- full.df[!(full.df$articleID %in% DF.duplicated.ID), ]
rm(DF.temp, DF.duplicated.ID)
}
#_______________________________________________________________________________
#            AUTHOR FIELD FIX - AUTHORS IN SINGLE FIELD
#-------------------------------------------------------------------------------
#
# Social Work abstracts lists authors in a single cell, separated by a semi-
# colon, and then includes digits and email addresses in some occassions.
# The following text locates each author in the cell and places it into a new
# row to be consistent with PsychInfo and SSA.
#_______________________________________________________________________________
#Create a new temporary data frame
DF.temp <- filter(full.df, attributes == "Author")
#Identify records with semi-colons in author names
semi.colons <- grepl("(;)", DF.temp$record)
#Select out those records with semi-colons in author names from temporary
#data frame
DF.temp <- DF.temp[semi.colons, ]
#Add a semi colon to the end of every string
DF.temp$record <- paste(DF.temp$record, ";", sep="")
semi.colon.split <- strsplit(DF.temp$record, ";")
split.df <- data.frame(
attributes = rep(DF.temp$attributes, lapply(semi.colon.split, length)),
record = unlist(semi.colon.split),
articleID = rep(DF.temp$articleID, lapply(semi.colon.split, length)))
#Trim whitespace on both sides
split.df$record <- stringr::str_trim(split.df$record, side = "both")
#Eliminate author affiliation from author record
split.df$record <- gsub("1\\s.+", "", split.df$record)
#Eliminate remaining number from author record
split.df$record <- gsub("1", "", split.df$record)
# Create a vector of all articleID's that were fixed
fixed.ID <- unique(split.df$articleID)
#Filter out all processed records from the fixed list
DF.authors <- filter(full.df, attributes == "Author")
DF.authors.good <- DF.authors[!(DF.authors$articleID %in% fixed.ID),]
DF.authors.fixed <- split.df
DF.no.authors <- filter(full.df, attributes != "Author")
#Strip author biographies
DF.authors.good$record <- gsub("11\\s.+", "", DF.authors.good$record)
#Bind the reduced DF with the fixed df
full.df <- rbind(DF.no.authors, DF.authors.good, DF.authors.fixed)
full.df <- arrange(full.df, articleID)
DF.temp <- filter(full.df, attributes == "keyWord")
DF.temp$record <- paste(DF.temp$record, ";", sep="")
comma.split <- strsplit(DF.temp$record, ";")
split.df <- data.frame(
attributes = rep(DF.temp$attributes, lapply(comma.split, length)),
record = unlist(comma.split),
articleID = rep(DF.temp$articleID, lapply(comma.split, length)))
split.df$record <- gsub("\\*", "", split.df$record)
split.df$record <- stringr::str_trim(split.df$record, side = "both")
split.df$record <- tolower(split.df$record)
DF.no.subject <- filter(full.df, attributes != "keyWord")
DF.subject.fixed <- split.df
DF <- rbind(DF.no.subject, DF.subject.fixed)
DF <- arrange(DF, articleID)
cc<=filter(proQuestBWR.df, attributes=="keyword")
cc<-filter(proQuestBWR.df, attributes=="keyword")
View(cc)
View(cc)
library(BibWrangleR)
proQuestBWR.f(path="C:/Users/SSW/Desktop/Wrangle")
View(proQuestBWR.df)
library(BibWrangleR)
proQuestBWR.f(path="C:/Users/SSW/Desktop/Wrangle")
View(proQuestBWR.df)
proQuestBWR.f(path="C:/Users/SSW/Desktop/Wrangle", rmDuplicates=FALSE)
?proQuestBWR.f
?ebscoBWR.f
rm(list=ls())
library(BibWrangleR)
getwd()
proQuestBWR.f(path="C:/Users/SSW/Desktop/Wrangle")
proQuestBWR.f(path="C:/Users/SSW/Desktop/Wrangle", csv=TRUE)
library(BibWrangleR)
proQuestBWR.f(path="C:/Users/SSW/Desktop/Wrangle", csv=TRUE)
library(BibWrangleR)
ff<-filter(proQuestBWR.df, attributes=="pubYear")
View(ff)
table(proQuestBWR.df$attributes)
ebscoBWR.f(path="C:/Users/SSW/Desktop/Wrangle", csv=TRUE)
table(ebscoBWR.df$attributes)
